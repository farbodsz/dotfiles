#==============================================================================
#
# Tmux configuration
# Author: Farbod Salamat-Zadeh
#
#==============================================================================

#------------------------------------------------------------------------------
# GENERAL
#------------------------------------------------------------------------------

# Add C-a as a prefix/leader (default: C-b)
set -g prefix2 C-a
bind C-a send-prefix -2

# Sensible defaults
set -g default-terminal "screen-256color"
setw -g xterm-keys on
set -s escape-time 10
set -sg repeat-time 600
set -s focus-events on
set -g mouse on
set -q -g status-utf8 on
setw -q -g utf8 on
set -g history-limit 5000

#------------------------------------------------------------------------------
# DISPLAY
#------------------------------------------------------------------------------

# Panes and windows starting at 1, and renumber if another closed
set -g base-index 1           
setw -g pane-base-index 1    
set -g renumber-windows on    

# Terminal title
set -g set-titles on
setw -g automatic-rename on   # rename window to reflect current program

# Display times
set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time
set -g status-interval 10     # redraw status line every 10 seconds

# Status position
set -g status-position bottom

#------------------------------------------------------------------------------
# NAVIGATION
#------------------------------------------------------------------------------

bind C-c new-session
bind C-f command-prompt -p find-session 'switch-client -t %%'

# Window navigation
unbind n
unbind p
bind -r C-h previous-window
bind -r C-l next-window
bind Tab last-window

# Splitting windows
unbind '"'
unbind %
bind - split-window -v
bind _ split-window -h

# Selecting panes
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R

# Swapping panes
bind > swap-pane -D
bind < swap-pane -U

# Resizing panes
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# FIXME: Maximize current pane
# bind + run 'cut -c3- ~/.tmux.conf | sh -s _maximize_pane "#{session_name}" #D'

#------------------------------------------------------------------------------
# COPY MODE
#------------------------------------------------------------------------------

# bind Enter copy-mode # enter copy mode

# run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
# run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
# run -b 'tmux bind -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
# run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'
# run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
# run -b 'tmux bind -T copy-mode-vi y send -X copy-selection-and-cancel 2> /dev/null || true'
# run -b 'tmux bind -t vi-copy Escape cancel 2> /dev/null || true'
# run -b 'tmux bind -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'
# run -b 'tmux bind -t vi-copy H start-of-line 2> /dev/null || true'
# run -b 'tmux bind -T copy-mode-vi H send -X start-of-line 2> /dev/null || true'
# run -b 'tmux bind -t vi-copy L end-of-line 2> /dev/null || true'
# run -b 'tmux bind -T copy-mode-vi L send -X end-of-line 2> /dev/null || true'

# # copy to macOS clipboard
# if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | pbcopy"'
# if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
# # copy to X11 clipboard
# if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
# if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'
# # copy to Windows clipboard
# if -b 'command -v clip.exe > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | clip.exe"'
# if -b '[ -c /dev/clipboard ]' 'bind y run -b "tmux save-buffer - > /dev/clipboard"'

# # buffers
# bind b list-buffers  # list paste buffers
# bind p paste-buffer  # paste from the top paste buffer
# bind P choose-buffer # choose which buffer to paste from


#------------------------------------------------------------------------------
# APPEARANCE
#  * Color palette
#------------------------------------------------------------------------------

COLOR_BG='#1c1b1a'
COLOR_BG3='#666462'
COLOR_FG4='#a89984'
COLOR_FG='#fbf1c7'
COLOR_BLUE='#458488'
COLOR_GREEN='#98971a'
COLOR_PURPLE='#ff9eb8'
COLOR_YELLOW='#fade3e'

#------------------------------------------------------------------------------
# APPEARANCE
#  * Windows and panes
#------------------------------------------------------------------------------

# Windows and panes
tmux_conf_theme_pane_border=$COLOR_FG4
tmux_conf_theme_pane_active_border=$COLOR_BLUE
tmux_conf_theme_pane_indicator=$COLOR_GREEN
tmux_conf_theme_pane_active_indicator=$COLOR_GREEN
setw -g window-active-style default  # don't highlight active pane
setw -g pane-border-style "fg=$tmux_conf_theme_pane_border"
set -g pane-active-border-style "fg=$tmux_conf_theme_pane_active_border"
set -g display-panes-colour "$tmux_conf_theme_pane_indicator" 
set -g display-panes-active-colour "$tmux_conf_theme_pane_active_indicator"

# Status line
tmux_conf_theme_message_fg=$COLOR_FG
tmux_conf_theme_message_bg='#000000'
tmux_conf_theme_message_attr='bold'
set -g message-style "fg=$tmux_conf_theme_message_fg,bg=$tmux_conf_theme_message_bg,$tmux_conf_theme_message_attr"

# Status line command style (<prefix> : Escape)
tmux_conf_theme_message_command_fg=$COLOR_FG
tmux_conf_theme_message_command_bg='#000000'
tmux_conf_theme_message_command_attr='bold'
set -g message-command-style "fg=$tmux_conf_theme_message_command_fg,bg=$tmux_conf_theme_message_command_bg,$tmux_conf_theme_message_command_attr"

# Window modes style
tmux_conf_theme_mode_fg=$COLOR_FG
tmux_conf_theme_mode_bg=$COLOR_PURPLE
tmux_conf_theme_mode_attr='bold'
setw -g mode-style "fg=$tmux_conf_theme_mode_fg,bg=$tmux_conf_theme_mode_bg,$tmux_conf_theme_mode_attr"

# Status line style
tmux_conf_theme_status_fg=$COLOR_FG4
tmux_conf_theme_status_bg=$COLOR_BG
tmux_conf_theme_status_attr='none'
set -g status-style "fg=$tmux_conf_theme_status_fg,bg=$tmux_conf_theme_status_bg,$tmux_conf_theme_status_attr"        
set -g status-left-style "fg=$tmux_conf_theme_status_fg,bg=$tmux_conf_theme_status_bg,$tmux_conf_theme_status_attr"   
set -g status-right-style "fg=$tmux_conf_theme_status_fg,bg=$tmux_conf_theme_status_bg,$tmux_conf_theme_status_attr"

# Terminal title
tmux_conf_theme_terminal_title='#h ❐ #S ● #I #W'
set -g set-titles-string "$tmux_conf_theme_terminal_title"

# Window status style
tmux_conf_theme_window_status_fg=$COLOR_BG
tmux_conf_theme_window_status_bg=$COLOR_BG3
tmux_conf_theme_window_status_attr='none'
tmux_conf_theme_window_status_format=' #I:#W '
setw -g window-status-style "fg=$tmux_conf_theme_window_status_fg,bg=$tmux_conf_theme_window_status_bg,$tmux_conf_theme_window_status_attr" 
setw -g window-status-format "$tmux_conf_theme_window_status_format" 
tmux_conf_theme_window_status_current_fg='#000000'
tmux_conf_theme_window_status_current_bg=$COLOR_GREEN
tmux_conf_theme_window_status_current_attr='bold'
tmux_conf_theme_window_status_current_format=' #I:#W '
tmux_conf_theme_window_status_current_format="#[fg=$tmux_conf_theme_window_status_bg,bg=$tmux_conf_theme_window_status_current_bg]#[fg=$tmux_conf_theme_window_status_current_fg,bg=$tmux_conf_theme_window_status_current_bg,$tmux_conf_theme_window_status_current_attr] $tmux_conf_theme_window_status_current_format #[fg=$tmux_conf_theme_window_status_current_bg,bg=$tmux_conf_theme_status_bg,none]"
setw -g window-status-current-style "fg=$tmux_conf_theme_window_status_current_fg,bg=$tmux_conf_theme_window_status_current_bg,$tmux_conf_theme_window_status_current_attr" 
setw -g window-status-current-format "$tmux_conf_theme_window_status_current_format"

# Window activity status style
tmux_conf_theme_window_status_activity_fg='default'
tmux_conf_theme_window_status_activity_bg='default'
tmux_conf_theme_window_status_activity_attr='underscore'
setw -g window-status-activity-style "fg=$tmux_conf_theme_window_status_activity_fg,bg=$tmux_conf_theme_window_status_activity_bg,$tmux_conf_theme_window_status_activity_attr"

# Window bell status style
tmux_conf_theme_window_status_bell_fg=$COLOR_YELLOW
tmux_conf_theme_window_status_bell_bg='default'
tmux_conf_theme_window_status_bell_attr='blink,bold'
setw -g window-status-bell-style "fg=$tmux_conf_theme_window_status_bell_fg,bg=$tmux_conf_theme_window_status_bell_bg,$tmux_conf_theme_window_status_bell_attr"

# Window last status style
tmux_conf_theme_window_status_last_fg=$COLOR_FG
tmux_conf_theme_window_status_last_bg=$COLOR_BLUE
tmux_conf_theme_window_status_last_attr='none'
setw -g window-status-last-style "fg=$tmux_conf_theme_window_status_last_fg,bg=$tmux_conf_theme_window_status_last_bg,$tmux_conf_theme_window_status_last_attr"

#------------------------------------------------------------------------------
# APPEARANCE
#  * Clock
#------------------------------------------------------------------------------

# Clock style (when you hit <prefix> + t)
tmux_conf_theme_clock_colour=$COLOR_BLUE
tmux_conf_theme_clock_style='24'
setw -g clock-mode-colour "$tmux_conf_theme_clock_colour"
setw -g clock-mode-style "$tmux_conf_theme_clock_style"

#------------------------------------------------------------------------------
# APPEARANCE
#  * Status styles
#------------------------------------------------------------------------------

# Status left style
tmux_conf_theme_status_left=' ❐ #S '
tmux_conf_theme_status_left_fg='$COLOR_BG, $COLOR_FG, $COLOR_FG'
tmux_conf_theme_status_left_bg='$COLOR_YELLOW, $COLOR_PURPLE, $COLOR_BLUE'
tmux_conf_theme_status_left_attr='bold,none,none'

set -g status-left-length 1000 
set -g status-left "#[fg=$tmux_conf_theme_status_left_fg,bg=$tmux_conf_theme_status_left_bg,$tmux_conf_theme_status_left_attr]$tmux_conf_theme_status_left"

#------------------------------------------------------------------------------
# SCRIPTS
#  * (TODO)
#------------------------------------------------------------------------------

# _maximize_pane() {
#   current_session=${1:-$(tmux display -p '#{session_name}')}
#   current_pane=${2:-$(tmux display -p '#{pane_id}')}
#
#   dead_panes=$(tmux list-panes -s -t "$current_session" -F '#{pane_dead} #{pane_id} #{pane_start_command}' | grep -E -o '^1 %.+maximized.+$' || true)
#   restore=$(echo "$dead_panes" | sed -n -E -e "s/^1 $current_pane .+maximized.+'(%[0-9]+)'$/tmux swap-pane -s \1 -t $current_pane \; kill-pane -t $current_pane/p" -e "s/^1 (%[0-9]+) .+maximized.+'$current_pane'$/tmux swap-pane -s \1 -t $current_pane \; kill-pane -t \1/p" )
#
#   if [ -z "$restore" ]; then
#     [ "$(tmux list-panes -t "$current_session:" | wc -l | sed 's/^ *//g')" -eq 1 ] && tmux display "Can't maximize with only one pane" && return
#     window=$(tmux new-window -t "$current_session:" -P "exec maximized... 2> /dev/null & tmux setw -t \"$current_session:\" remain-on-exit on; printf \"Pane has been maximized, press <prefix>+ to restore. %s\" '$current_pane'")
#     window=${window%.*}
#
#     retry=1000
#     while [ x"$(tmux list-panes -t "$window" -F '#{session_name}:#{window_index} #{pane_dead}' 2>/dev/null)" != x"$window 1" ] && [ "$retry" -ne 0 ]; do
#       sleep 0.1
#       retry=$((retry - 1))
#     done
#     if [ "$retry" -eq 0 ]; then
#       tmux display 'Unable to maximize pane'
#     fi
#
#     new_pane=$(tmux display -t "$window" -p '#{pane_id}')
#     tmux setw -t "$window" remain-on-exit off \; swap-pane -s "$current_pane" -t "$new_pane"
#   else
#     $restore || tmux kill-pane
#   fi
# }
#
# "$@"
